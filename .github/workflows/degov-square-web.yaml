name: Release

on:
  workflow_dispatch:
  push:
    branches:
      - main  # 监听 main 分支推送
    tags:
      - "v*"   # 监听 Tag 推送

env:
  DOCKER_REGISTRY: ghcr.io

jobs:
  release-backend:
    name: Release backend
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Docker login
        uses: docker/login-action@v3
        with:
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          registry: ${{ env.DOCKER_REGISTRY }}

      - uses: benjlevesque/short-sha@v3.0
      - uses: olegtarasov/get-tag@v2.1.4
      - name: Get branch names
        id: branch-names
        uses: tj-actions/branch-names@v9

      - name: Login to Docker Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: aitops@xiequan.info
          password: ${{ secrets.Registry }}
      # 构建并推送镜像（分支推送时）
      - name: Publish docker image for branch push
        id: push-branch-image
        if: startsWith(github.ref, 'refs/heads/')
        uses: docker/build-push-action@v6
        with:
          push: true
          context: backend
          file: backend/Dockerfile
          tags: |
            ${{ env.DOCKER_REGISTRY }}/${{ github.repository }}/backend:sha-${{ env.SHA }}
            ${{ env.DOCKER_REGISTRY }}/${{ github.repository }}/backend:staging
          build-args: |
            APP_VERSION=${{ steps.branch-names.outputs.current_branch }}-${{ env.SHA }}

      # 构建并推送镜像（Tag 推送时）
      - name: Publish docker image for tag push
        id: push-tag-image
        if: startsWith(github.ref, 'refs/tags/v')
        uses: docker/build-push-action@v6
        with:
          push: true
          context: backend
          file: backend/Dockerfile
          tags: |
            ${{ env.DOCKER_REGISTRY }}/${{ github.repository }}/backend:sha-${{ env.SHA }}
            ${{ env.DOCKER_REGISTRY }}/${{ github.repository }}/backend:${{ env.GIT_TAG_NAME }}
            ${{ env.DOCKER_REGISTRY }}/${{ github.repository }}/backend:latest
          build-args: |
            APP_VERSION=${{ env.GIT_TAG_NAME }}-${{ env.SHA }}

      # 设置 DOCKER_IMAGE_NAME（分支推送时用 sha，Tag 推送时用 Tag）
      - name: Set DOCKER_IMAGE_NAME for GitOps update
        run: |
          if [[ "${{ github.ref }}" == refs/tags/* ]]; then
            # Tag 推送：使用 Tag 镜像（如 v1.0.0）
            echo "DOCKER_IMAGE_NAME=${{ env.DOCKER_REGISTRY }}/${{ github.repository }}/backend:${{ env.GIT_TAG_NAME }}" >> $GITHUB_ENV
          else
            # 分支推送：使用 sha 镜像（如 sha-abc123）
            echo "DOCKER_IMAGE_NAME=${{ env.DOCKER_REGISTRY }}/${{ github.repository }}/backend:sha-${{ env.SHA }}" >> $GITHUB_ENV
          fi

      # 检出 GitOps 仓库并更新镜像
      - name: Checkout GitOps repo
        uses: actions/checkout@v3
        with:
          repository: devows/gitops-ringdao
          ref: main
          path: gitops-repo
          token: ${{ secrets.Registry }}  # 确保有写入权限

      - name: Update manifest
        working-directory: gitops-repo
        run: |
          DEPLOY_FILES=(
            "appsmanifests/degov-square-web/overlays/env/prod/deployment-patch.yaml"
            "appsmanifests/degov-indexer/overlays/env/prod/deployment-patch.yaml"
            "appsmanifests/degov-indexer/overlays/env/staging/deployment-patch.yaml"
          )
          
          for DEPLOY_FILE in "${DEPLOY_FILES[@]}"; do
            echo "Updating file: $DEPLOY_FILE"
            
            if [ -f "./${DEPLOY_FILE}" ]; then
              #  Update image in deployment file
              sed -i "s|image: .*|image: ${{ env.DOCKER_IMAGE_NAME }}|" "./${DEPLOY_FILE}"
              echo "✅ Updated: $DEPLOY_FILE"
            else
              echo "⚠️  File not found: $DEPLOY_FILE"
            fi
          done
          
          # Commit and push changes
          git config user.email "aitops@xiequan.info"
          git config user.name "aitops01"
          git add "${DEPLOY_FILES[@]}"
          git commit -m "Update image to ${{ env.DOCKER_IMAGE_NAME }}"
          git push origin main
      